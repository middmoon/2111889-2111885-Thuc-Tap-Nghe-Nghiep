// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;

namespace server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250226022109_SeedRolesAndUsersUpadate")]
    partial class SeedRolesAndUsersUpadate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("server.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "reader"
                        },
                        new
                        {
                            Id = 3,
                            Name = "writer"
                        });
                });

            modelBuilder.Entity("server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "AQAAAAEAACcQAAAAEFGzOQpo0i0+tQqjfcZcV9CpjBNPWhLCzrXMTM6t0R0rIWBEI8G7dnuqxY9IxAZkxg==",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "AQAAAAEAACcQAAAAEPFsW+v3NipwiZjyZJjcPXMokCwEoA/bXuBh7xQ4oYGqQvINPLRTg719padQoYiJYQ==",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "AQAAAAEAACcQAAAAEJ0MQEs4WGVnop2xvONyi/H8zO/DSQjWE4dAZJOVgHSuc3W67TJKJlMNazgekjiiuw==",
                            Username = "editor1"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "AQAAAAEAACcQAAAAENY+mAeQCG865Yan5DFyf/HMQIJLamqn445LNci/EgKx5LxkCmyhsnMV+mXAvBeqMw==",
                            Username = "editor2"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "AQAAAAEAACcQAAAAELjYslBDQkh5zm+uvWqcKJSUmA7OK/1FJzKwmPsi9fwiqaJ9/MTCrLLzxcmoKv6EEQ==",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("server.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("server.Models.UserRole", b =>
                {
                    b.HasOne("server.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("server.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("server.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
